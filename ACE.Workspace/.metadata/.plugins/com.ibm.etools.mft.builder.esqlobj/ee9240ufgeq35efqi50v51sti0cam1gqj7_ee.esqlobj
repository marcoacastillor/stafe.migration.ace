/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		DECLARE NM_COMPONENT CHARACTER 'UPDATE_STATE';
		DECLARE SERVICE_RQ_TRACE INTEGER 2;
		
		/******************************************************/
		-- Copiar cabeceras de mensaje
		/******************************************************/
		SET OutputRoot.MQMD 	= InputRoot.MQMD;
		SET OutputRoot.MQRFH2 	= InputRoot.MQRFH2;
		
		/******************************************************/
		-- Declarar referencias
		/******************************************************/
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2;
		DECLARE refInpRoot REFERENCE TO OutputRoot;
		
		/******************************************************/
		-- Setear información para auditoría y headers
		/******************************************************/
		CALL common.procedures.utils.createMsgLogs(refMQRFH2, SERVICE_RQ_TRACE, NM_COMPONENT);
		CALL common.procedures.utils.saveMQM(refInpRoot, refEnv);
		
		/******************************************************/
		-- Declarar referencia a objeto de entrada
		/******************************************************/
		DECLARE sql, consecutive CHARACTER '';
		DECLARE refInp REFERENCE TO InputRoot.JSON;
		MOVE refInp LASTCHILD;
		
		SET consecutive = SUBSTRING(refInp.patient.personalInfo.patientNumber AFTER ':');
		SET sql = 'UPDATE ADMSALUD.PAC_TELEMEDICINA_DET SET PAC_TEL_ESTADO = ? WHERE PAC_TEL_CONSEC = ?';
		PASSTHRU(sql,'APROBADO',consecutive);
		
		/******************************************************/
		-- Creación mensaje de respuesta
		/******************************************************/
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE refOut REFERENCE TO OutputRoot.JSON.Data;
		
		--Creación del mensaje de error de fachada
		--Creación del mensaje de error de fachada
		SET refOut.transactionInfo.idTransaction		= refMQRFH2.usr.contextTransaction.IdTransaction;
		SET refOut.transactionInfo.code					= '00';
		SET refOut.transactionInfo.desc					= 'Actualización de estado exitosa.';
		SET refOut.patient.personalInfo.patientNumber	= consecutive;
		SET refOut.patient.personalInfo.authorizationHabeas			= refInp.patient.personalInfo.authorizationHabeas;
		
		RETURN TRUE;
	END;
