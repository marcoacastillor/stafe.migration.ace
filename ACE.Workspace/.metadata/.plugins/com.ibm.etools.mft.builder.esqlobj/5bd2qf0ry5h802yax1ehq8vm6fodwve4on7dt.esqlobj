CREATE COMPUTE MODULE ValidateState_validateResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE NM_COMPONENT CHARACTER 'VALIDATE';
		DECLARE SERVICE_RQ_TRACE INTEGER 2;
		
		/******************************************************/
		-- Copiar cabeceras de mensaje
		/******************************************************/
		SET OutputRoot.MQMD 	= InputRoot.MQMD;
		SET OutputRoot.MQRFH2 	= InputRoot.MQRFH2;
		
		/******************************************************/
		-- Declarar referencias
		/******************************************************/
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2;
		DECLARE refInpRoot REFERENCE TO OutputRoot;
		
		/******************************************************/
		-- Setear información para auditoría y headers
		/******************************************************/
		CALL common.procedures.utils.createMsgLogs(refMQRFH2, SERVICE_RQ_TRACE, NM_COMPONENT);
		CALL common.procedures.utils.saveMQM(refInpRoot, refEnv);
		
		/******************************************************/
		-- Declarar referencia a objeto de entrada
		/******************************************************/
		DECLARE sql CHARACTER '';
		DECLARE refInp REFERENCE TO InputRoot.JSON;
		MOVE refInp LASTCHILD;
		
		DECLARE SRV_Message, In_PAC_TEL_CONSEC CHARACTER '';
		
		SET In_PAC_TEL_CONSEC 	= refInp.patient.personalInfo.patientNumber;
		
		CALL validatePatient(
		 SRV_Message,
		 In_PAC_TEL_CONSEC
		);
		
		/******************************************************/
		-- Creación mensaje de respuesta
		/******************************************************/
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE refOut REFERENCE TO OutputRoot.JSON.Data;
		
		SET refOut.transactionInfo.idTransaction	= refMQRFH2.usr.contextTransaction.IdTransaction;
		IF CONTAINS(SUBSTRING(SRV_Message FROM 1 FOR 6), '1000') THEN
			
			/******************************************************/
			-- Consulta de valor para habeasdata
			/******************************************************/
			DECLARE result ROW;
			DECLARE number_habeas, number_id, type_id CHARACTER '';
			SET sql = 'SELECT PAC_PAC_NUMERO FROM ADMSALUD.PAC_PACIENTE WHERE TRIM(PAC_PAC_RUT) = ? AND PAC_PAC_TIPOIDENTCODIGO = ?';
			
			SET number_id = TRIM(refInp.patient.personalInfo.idNumber);
			SET type_id = TRIM(refInp.patient.personalInfo.idType);
			SET result.data[] = PASSTHRU(sql,number_id, type_id);
			
			IF CARDINALITY(result.data[]) > 0  THEN
				SET number_habeas = result.data.PAC_PAC_NUMERO;
			END IF;
			
			SET refOut.transactionInfo.code				= '000';
			SET refOut.transactionInfo.desc				= SRV_Message;
			
			SET refOut.patient.personalInfo.patientNumber	= In_PAC_TEL_CONSEC;
			SET refOut.patient.personalInfo.numberHabeas	= number_habeas;
		ELSE
			SET refOut.transactionInfo.code				= '300';
			SET refOut.transactionInfo.desc				= SRV_Message;
		END IF;
		
		RETURN TRUE;
	END;
END MODULE;