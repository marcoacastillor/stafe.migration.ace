/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN

		
		
		IF FIELDNAME(InputRoot.XMLNSC.ns:FSFB) = 'FSFB' THEN
			
			DECLARE msginESB 	REFERENCE TO InputRoot.XMLNSC.ns:FSFB;
			DECLARE headerin	REFERENCE TO msginESB.ns:Header;
			DECLARE bodyin		REFERENCE TO msginESB.ns:Body;

			-- verificar flag de log
			IF CAST(headerin.ns:service.log AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				-- construcción de mensaje de log
				CREATE FIELD OutputRoot.XMLNSC.log;
				SET OutputRoot.XMLNSC.log.msgflow 		= msgflow;
				SET OutputRoot.XMLNSC.log.msgid 		= InputRoot.MQMD.MsgId;
				SET OutputRoot.XMLNSC.log.timestamp 	= CURRENT_TIMESTAMP;
				PROPAGATE TO TERMINAL 'out1';
			END IF;	
			
			-- verificar flag de audit
			IF 	CAST(headerin.ns:service.audit AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				-- referenciar propiedades para decodificar mensaje
				DECLARE parser 		CHARACTER bodyin.parse.parser;
				DECLARE msgtype		CHARACTER bodyin.parse.msgtype;
				DECLARE msgset 		CHARACTER bodyin.parse.msgset;
				DECLARE msgformat	CHARACTER bodyin.parse.msgformat;
				DECLARE msgref		REFERENCE TO OutputLocalEnvironment.Variables.msg;
				DECLARE msgblob		BLOB bodyin.data;
				-- construcción de mensaje de audit
				CREATE FIELD OutputRoot.XMLNSC.audit;
				SET OutputRoot.XMLNSC.audit.msgflow 	= msgflow;
				SET OutputRoot.XMLNSC.audit.msgid 		= InputRoot.MQMD.MsgId;
				SET OutputRoot.XMLNSC.audit.timestamp 	= CURRENT_TIMESTAMP;
				
				CALL UTILS.decodemsg(parser, msgtype, msgset, msgformat, msgblob, msgref);
				
				SET OutputRoot.XMLNSC.audit.data 		= msgref;
				
				RETURN TRUE;
				
			END IF;
			
		ELSEIF EXISTS(InputRoot.BLOB[]) THEN
			
			CALL CopyMessageHeaders();
			-- construcción de mensaje de log
			CREATE FIELD OutputRoot.XMLNSC.log;
			SET OutputRoot.XMLNSC.log.msgflow 		= msgflow;
			SET OutputRoot.XMLNSC.log.msgid 		= InputRoot.MQMD.MsgId;
			SET OutputRoot.XMLNSC.log.timestamp 	= CURRENT_TIMESTAMP;
			
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			
			SET OutputRoot.XMLNSC = NULL;
			CALL CopyMessageHeaders();
			SET OutputRoot.BLOB.BLOB =  X'0D0A' ||  CAST (CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy HH:mm') AS BLOB CCSID 819) ||  X'0D0A' || InputRoot.BLOB.BLOB;
			
			--SET OutputRoot.BLOB.BLOB = CAST (CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy HH:mm') AS BLOB CCSID 819) || InputRoot.BLOB.BLOB;
				
			RETURN TRUE;
					
		ELSEIF FIELDNAME(InputRoot.MRM) = 'MRM' THEN
			
			DECLARE msginHL7		REFERENCE TO InputRoot.MRM;
			
			IF CAST(TRUE AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				-- construcción de mensaje de log
				CREATE FIELD OutputRoot.XMLNSC.log;
				SET OutputRoot.XMLNSC.log.msgflow 		= msgflow;
				SET OutputRoot.XMLNSC.log.msgid 		= InputRoot.MQMD.MsgId;
				SET OutputRoot.XMLNSC.log.timestamp 	= CURRENT_TIMESTAMP;
				
				PROPAGATE TO TERMINAL 'out1';
				
			END IF;
			IF CAST(TRUE AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				DECLARE hl7 REFERENCE TO InputRoot.MRM;
			-- propiedades para convertir a BLOB
				DECLARE datetime	CHARACTER CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy HH:mm');
				DECLARE parser		CHARACTER 'MRM';
				DECLARE msgset		CHARACTER 'HL7v25';
				DECLARE msgtype		CHARACTER 'HL7';
				DECLARE msgformat	CHARACTER 'HL7';
				DECLARE msgblob		BLOB;
				
				CALL UTILS.encodemsg(msgtype, msgset, msgformat, hl7, msgblob);
				
				--SET msgblob = REPLACE( msgblob, X'0D', X'0D0A' ); 
				
				SET OutputRoot.BLOB.BLOB =  X'0D0A' || CAST (datetime AS BLOB CCSID 819) || X'0D0A' || msgblob;
				
				RETURN TRUE;
			END IF;ELSEIF FIELDNAME(InputRoot.MRM) = 'MRM' THEN
			
			DECLARE msginHL7		REFERENCE TO InputRoot.MRM;
			
			IF CAST(TRUE AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				-- construcción de mensaje de log
				CREATE FIELD OutputRoot.XMLNSC.log;
				SET OutputRoot.XMLNSC.log.msgflow 		= msgflow;
				SET OutputRoot.XMLNSC.log.msgid 		= InputRoot.MQMD.MsgId;
				SET OutputRoot.XMLNSC.log.timestamp 	= CURRENT_TIMESTAMP;
				
				PROPAGATE TO TERMINAL 'out1';
				
			END IF;
			IF CAST(TRUE AS BOOLEAN) THEN
				CALL CopyMessageHeaders();
				DECLARE hl7 REFERENCE TO InputRoot.MRM;
			-- propiedades para convertir a BLOB
				DECLARE datetime	CHARACTER CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy HH:mm');
				DECLARE parser		CHARACTER 'MRM';
				DECLARE msgset		CHARACTER 'HL7v25';
				DECLARE msgtype		CHARACTER 'HL7';
				DECLARE msgformat	CHARACTER 'HL7';
				DECLARE msgblob		BLOB;
				
				CALL UTILS.encodemsg(msgtype, msgset, msgformat, hl7, msgblob);
				
				--SET msgblob = REPLACE( msgblob, X'0D', X'0D0A' ); 
				
				SET OutputRoot.BLOB.BLOB =  X'0D0A' || CAST (datetime AS BLOB CCSID 819) || X'0D0A' || msgblob;
				
				RETURN TRUE;
			END IF;
			
		ELSEIF FIELDNAME(InputRoot.XMLNSC.SP) = 'SP' THEN
			CALL CopyMessageHeaders();
			DECLARE msginSP			REFERENCE TO InputRoot.XMLNSC.SP;
			
			IF CAST(Environment.Variables.Traceable AS BOOLEAN) THEN
				
				PROPAGATE TO TERMINAL 'out1';
			END IF;
			IF CAST(Environment.Variables.Auditable AS BOOLEAN) THEN
				
				RETURN TRUE;
			END IF;
				
		END IF;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
