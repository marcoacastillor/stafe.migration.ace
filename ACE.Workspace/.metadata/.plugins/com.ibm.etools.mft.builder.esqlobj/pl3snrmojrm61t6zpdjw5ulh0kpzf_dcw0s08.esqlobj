CREATE COMPUTE MODULE DFT_RIS_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.Variables.MQMD = InputRoot.MQMD;
				
		DECLARE ack 	CHARACTER;
		DECLARE msgin 	REFERENCE TO InputRoot.DFDL.ns1:P03;
		DECLARE sourceCursor 	REFERENCE TO InputRoot.DFDL.ns1:P03.ns1:FT1_LOOP_P03;
		DECLARE PID_ID CHARACTER;
		DECLARE PID_ID2 INTEGER;
		DECLARE PID_03_INFO CHARACTER;
		DECLARE PID_05_FNAME CHARACTER;
		DECLARE PV1_19_VISITNR CHARACTER;
		DECLARE PR1_03_BILLING_CODE CHARACTER;
		DECLARE PR1_03_CODE_INT CHARACTER;
		DECLARE FT1_02_EXAM_CODE CHARACTER;
		DECLARE FT1_02_TYPE_ID CHARACTER;
		DECLARE FT1_06_STATUS CHARACTER;
		DECLARE FT1_07_CODE_ID CHARACTER;
		DECLARE FT1_07_EXAM_CODE CHARACTER;
		DECLARE FT1_02_07_FLAG INTEGER;
		DECLARE FT1_10_QTY INTEGER;
		DECLARE FT1_13_CC CHARACTER;
		DECLARE FT1_18_P_TYPE CHARACTER;
		DECLARE FT1_24_USER_RIS CHARACTER;
		DECLARE FT1_09_STATUS_PAID CHARACTER;
		DECLARE FT1_26_ACC_NUMBER CHARACTER;
		DECLARE FT1_ANESTESIA CHARACTER;
		
		DECLARE TransactionID CHARACTER;
		DECLARE TransactionBatchID INTEGER;
		DECLARE TransactionDate  CHARACTER;
		DECLARE TransactionPostingDate  CHARACTER;
		
		SET PID_ID = CAST(msgin.ns1:PID.*:"PID.2.PatientID".*:"CX.1" AS INTEGER);
		SET PID_ID2	 = CAST(msgin.ns1:PID.*:"PID.3.PatientIdentifierList".*:"CX.1"  AS INTEGER);
		SET PID_03_INFO = msgin.ns1:PID.*:"PID.4.AlternatePatientIDPID".*:"CX.1";
		SET PID_05_FNAME = msgin.ns1:PID.*:"PID.5.PatientName".*:"XPN.1".*:"FN.1" ||  '^' ||  msgin.ns1:PID.*:"PID.5.PatientName".*:"XPN.2";
		SET PV1_19_VISITNR = COALESCE( msgin.ns1:PV1_LOOP_P03.PV1.*:"PV1.19.VisitNumber".*:"CX.1", ' ');
		
		ProcessInvoice: BEGIN
			IF NOT LASTMOVE(sourceCursor) THEN
      			LEAVE ProcessInvoice;
    		END IF;
    		    -- Loop through the invoices in the source tree
				        --Ingresar  logica
				        --Examen
				        SET PR1_03_BILLING_CODE = sourceCursor.ns1:PR1_LOOP.*:PR1.*:"PR1.3.ProcedureCode".*:"CNE.1";
				        SET PR1_03_CODE_INT = sourceCursor.ns1:PR1_LOOP.*:PR1.*:"PR1.3.ProcedureCode".*:"CNE.1";
				        SET FT1_02_EXAM_CODE =  sourceCursor.ns1:FT1.*:"FT1.2.TransactionID";
				        SET FT1_02_TYPE_ID =  sourceCursor.ns1:FT1.*:"FT1.2.TransactionID";
				        SET TransactionID = sourceCursor.ns1:FT1.*:"FT1.2.TransactionID";
				        SET TransactionBatchID = CAST(sourceCursor.ns1:FT1.*:"FT1.3.TransactionBatchID" AS CHARACTER);
				        SET TransactionDate = CAST(sourceCursor.ns1:FT1.*:"FT1.4.TransactionDate".*:"DR.1" AS CHARACTER);
				        SET TransactionPostingDate = CAST(sourceCursor.ns1:FT1.*:"FT1.5.TransactionPostingDate" AS CHARACTER);
				        SET FT1_06_STATUS = 'TP';
				        SET FT1_07_CODE_ID = sourceCursor.ns1:FT1.*:"FT1.7.TransactionCode".*:"CWE.1" ||  '^' || sourceCursor.ns1:FT1.*:"FT1.7.TransactionCode".*:"CWE.2" ||  '^' || sourceCursor.ns1:FT1.*:"FT1.7.TransactionCode".*:"CWE.3";
				        SET FT1_07_EXAM_CODE   = sourceCursor.ns1:FT1.*:"FT1.7.TransactionCode".*:"CWE.1";
				        SET FT1_02_07_FLAG = 1;
				        SET FT1_10_QTY = sourceCursor.ns1:FT1.*:"FT1.10.TransactionQuantity";
				        SET FT1_13_CC = sourceCursor.ns1:FT1.*:"FT1.13.DepartmentCode".*:"CWE.4";
				        SET FT1_18_P_TYPE = sourceCursor.ns1:FT1.*:"FT1.18.PatientType".*:"CWE.1";
				        SET FT1_24_USER_RIS = sourceCursor.ns1:FT1.*:"FT1.24.EnteredByCode".*:"XCN.1";
				        SET FT1_09_STATUS_PAID = '';
				        SET FT1_26_ACC_NUMBER = sourceCursor.ns1:FT1.*:"FT1.26.ProcedureCodeModifier".*:"CNE.1";
				        SET FT1_ANESTESIA = sourceCursor.ns1:PR1_LOOP.*:PR1.*:"PR1.6.ProcedureFunctionalType".*:"CWE.1";
				        
				        CALL SvcIbmPrcDft ( 
					        ack, /*  Parámetro de uso interno  */
					        1,  /*  Identificador único del registro  */
					        PID_ID,  /*  Identificación del paciente  */
					        PID_ID2, /*  PAC_PAC_Numero  */
					        PID_03_INFO,
					        PID_05_FNAME,
					        PR1_03_BILLING_CODE, /*  Cod. FacturaciO  */
					        PR1_03_CODE_INT,  /*  Consecutivo  */
					        FT1_02_EXAM_CODE, /*  codigo del examen  */
					        FT1_02_TYPE_ID, /*  Id producto  */
					        TransactionBatchID,  /*  Numero de la petición en RIS  */
					        REPLACE(TransactionDate, 'T', ' '),  /*  fecha de examen  */
					        REPLACE(TransactionDate, 'T', ' '), /*  fecha peticion   */
					        REPLACE(TransactionPostingDate, 'T', ' '), /*  Fecha insercion  */
					        FT1_06_STATUS, /*  Estado registro  */
					        FT1_07_CODE_ID,  /*  Informacion examen  */
					        FT1_07_EXAM_CODE,  /*  Codigo prestaciO  */
					        FT1_02_07_FLAG,  /*  tipo registro  */ 
					        FT1_10_QTY, /*  Cantidad  */
					        FT1_13_CC, /*  Centro de Costo  */
					        FT1_18_P_TYPE, /*  Tipo de Paciente  */
					        FT1_24_USER_RIS,  /*  Usuario RIS  */
					        FT1_09_STATUS_PAID,  /*  Producto Cubierto  */
					        PV1_19_VISITNR,/*  Numero que agrupa los cargos al pacie  */
					        FT1_26_ACC_NUMBER, /*  Numero de acceso de la prestación  */
					        FT1_ANESTESIA, /*  Anestesia  */
					        NULL
				        ); 
				    
		END ProcessInvoice;

		SET OutputRoot.MQMD	= InputRoot.MQMD;
		
		/*
		
		CREATE FIELD OutputRoot.DFDL.ns1:ACK.ns1:MSH;
		DECLARE refOut REFERENCE TO OutputRoot.DFDL.ns1:ACK.ns1:MSH;
		
		-- mantener correlId
		SET OutputRoot.Properties.MessageSet	 = '{HL7-2.7}';
		SET OutputRoot.Properties.MessageType	 = '{urn:hl7-org:v2xml}:ACK';
		
		SET refOut.*:"MSH.1.FieldSeparator" 							= '|';
		SET refOut.ns1:"MSH.2.ServiceString".ns1:ComponentSeparator			= '^';
		SET refOut."MSH.2.ServiceString".RepeatSeparator			= '~';
		SET refOut."MSH.2.ServiceString".EscapeCharacter			= '\';
		SET refOut."MSH.2.ServiceString".SubComponentSeparator		= '&';
		SET refOut."MSH.3.SendingApplication"."HD.1"				= 'RAPP';
		SET refOut."MSH.4.SendingFacility"."HD.1"					= 'RFAC';
		SET refOut."MSH.5.ReceivingApplication"."HD.1"				= 'QDOC';
		SET refOut."MSH.6.ReceivingFacility""HD.1"					= 'AGFA-1';
		SET refOut."MSH.7.DateTimeOfMessage"						= CAST( CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET refOut."MSH.9.MessageType"."MSG.1"			= 'ACK';
		SET refOut."MSH.9.MessageType"."MSG.2"			= 'P03';
		SET refOut."MSH.9.MessageType"."MSG.3"			= 'ACK^P03';
		SET refOut."MSH.10.MessageControlID"			= ack;
		SET refOut."MSH.11.ProcessingID"."PT.1"			= 'P';
		SET refOut."MSH.12.VersionID"."VID.1"			= '2.4';
		MOVE refOut PARENT;
		SET refOut.MSA."MSA.1.AcknowledgementCode"			= 'AE';
		SET refOut.ns1:MSA."MSA.2.MessageControlID"				= CAST(msgin.ns1:MSH.*:"MSH.10.MessageControlID" AS CHARACTER);
		
		*/
		
		--SET OutputRoot.XMLNSC.ns3:DFT_ACK.(XMLNSC.NamespaceDec1)xmlns:xs = ns3;
		SET OutputRoot.XMLNSC.ns3:ACK_RIS.ns3:SRV_Message 	= ack;
		SET OutputRoot.XMLNSC.ns3:ACK_RIS.ns3:MSH_ORU_ID	= TRIM(CAST(msgin.ns1:MSH.*:"MSH.10.MessageControlID" AS CHARACTER));
		--SET OutputRoot.XMLNSC.xs:ACK_RIS.xs:SRV_Message = ack;		
		--SET OutputRoot.XMLNSC.*:DFT_ACK.*:MSH_DFT_ID = CAST(msgin.ns1:MSH.*:"MSH.10.MessageControlID" AS CHARACTER);
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE SvcIbmPrcDft  ( INOUT SRV_Message CHARACTER                                         /*  Parámetro de uso interno  */
    , IN In_MSH_DFT_ID INTEGER                                             /*  Identificador único del registro  */
    , IN In_PID_ID CHARACTER                                            /*  Identificación del paciente  */
    , IN In_PID_ID2  INTEGER                                          /*  PAC_PAC_Numero  */
    , IN In_PID_03_INFO CHARACTER                                      
    , IN In_PID_05_FNAME  CHARACTER                                     
    , IN In_PR1_03_BILLING_CODE  CHARACTER                             /*  Cod. Facturació  */
    , IN In_PR1_03_CODE_INT   CHARACTER                                 /*  Consecutivo  */
    , IN In_FT1_02_EXAM_CODE  CHARACTER                                 /*  codigo del examen  */
    , IN In_FT1_02_TYPE_ID  CHARACTER                                   /*  Id producto  */
    , IN In_FT1_03_BATCH_ID  INTEGER                                    /*  Numero de la petición en RIS  */
    , IN In_FT1_04_PROCEDURE_DATE CHARACTER                            /*  fecha de examen  */
    , IN In_FT1_04_TRANS_DATE   CHARACTER                              /*  fecha peticion   */
    , IN In_FT1_05_POST_DATE CHARACTER                                 /*  Fecha insercion  */
    , IN In_FT1_06_STATUS  CHARACTER                                  /*  Estado registro  */
    , IN In_FT1_07_CODE_ID  CHARACTER                                    /*  Informacion examen  */
    , IN In_FT1_07_EXAM_CODE CHARACTER                                 /*  Codigo prestació  */
    , IN In_FT1_02_07_FLAG  INTEGER                                     /*  tipo registro  */
    , IN In_FT1_10_QTY  INTEGER                                          /*  Cantidad  */
    , IN In_FT1_13_CC  CHARACTER                                        /*  Centro de Costo  */
    , IN In_FT1_18_P_TYPE  CHARACTER                                    /*  Tipo de Paciente  */
    , IN In_FT1_24_USER_RIS  CHARACTER                                 /*  Usuario RIS  */
    , IN In_FT1_09_STATUS_PAID  CHARACTER                            /*  Producto Cubierto  */
    , IN In_PV1_19_VISITNR    CHARACTER                                /*  Numero que agrupa los cargos al pacie  */
    , IN In_FT1_26_ACC_NUMBER  CHARACTER                                /*  Numero de acceso de la prestación  */
    , IN In_FT1_ANESTESIA   CHARACTER                                    /*  Anestesia  */
    , IN In_DFT_03_ACTIVE_STAT  CHARACTER                              
    )  LANGUAGE DATABASE EXTERNAL NAME "admsalud.SvcIbmPrcDft_Pkg.SvcIbmPrcDft";
    
END MODULE;