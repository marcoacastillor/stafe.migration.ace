/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		CREATE FIELD OutputRoot.XMLNSC.ORURs;
		DECLARE refOut REFERENCE TO OutputRoot.XMLNSC.ORURs;
		DECLARE refInp REFERENCE TO InputRoot.XMLNSC.ORU;
		FOR refIn AS refInp.ORC_LOOP[]  DO
			CALL spRIS_ORU(
			refIn.SRV_Message,
			refIn.In_MSH_ORU_ID,
			refIn.In_ORU_01_HIS_DATE,
			refIn.In_MSH_06_RIS_DATE,
			refIn.In_OBR_02_QP_REQ_ID,
			refIn.In_OBR_03_BATCH_ID,
			refIn.In_ORU_03_ACC_NUMBER,
			refIn.In_PID_05_ID,
			refIn.In_PID_05_ID2,
			refIn.In_OBR_04_EXAM_CODE,
			refIn.In_OBR_32_RAD_ID,
			refIn.In_OBR_25_STATUS_REP,
			refIn.In_OBR_22_CREATE_DATE,
			refIn.In_OBR_27_VALIDATE_DATE,
			refIn.In_ORU_02_STATUS_HIS,
			refIn.In_OBR_34_USER_RIS,
			refIn.In_OBX_03_OBSERVATION_ID,
			refIn.In_OBX_05_OBSERVATION,
			refIn.In_AGFARIS_ErrorMsg );			
		END FOR;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE spRIS_ORU (INOUT SRV_Message CHARACTER
	, IN In_MSH_ORU_ID INTEGER
	, IN In_ORU_01_HIS_DATE CHARACTER
	, IN In_MSH_06_RIS_DATE CHARACTER
	, IN In_OBR_02_QP_REQ_ID CHARACTER
	, IN In_OBR_03_BATCH_ID CHARACTER
	, IN In_ORU_03_ACC_NUMBER CHARACTER
	, IN In_PID_05_ID CHARACTER
	, IN In_PID_05_ID2 CHARACTER
	, IN In_OBR_04_EXAM_CODE CHARACTER
	, IN In_OBR_32_RAD_ID CHARACTER
	, IN In_OBR_25_STATUS_REP CHARACTER
	, IN In_OBR_22_CREATE_DATE CHARACTER
	, IN In_OBR_27_VALIDATE_DATE CHARACTER
	, IN In_ORU_02_STATUS_HIS CHARACTER
	, IN In_OBR_34_USER_RIS CHARACTER
	, IN In_OBX_03_OBSERVATION_ID CHARACTER
	, IN In_OBX_05_OBSERVATION BLOB
	, IN In_AGFARIS_ErrorMsg CHARACTER
	) LANGUAGE DATABASE EXTERNAL NAME "ADMSALUD.SvcIbmPrcOru_Pkg.SvcIbmPrcOru";
