BROKER SCHEMA ORU

DECLARE ns51 NAMESPACE 'http://co/org/fsfb/HIS_ORMOUT/impl';
DECLARE ns NAMESPACE 'urn:hl7-org:v2xml';
DECLARE ns1 NAMESPACE 'http://co/org/fsfb/fmwk';

CREATE COMPUTE MODULE oru_spRIS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ack CHARACTER;
		DECLARE BatchID CHARACTER;
		DECLARE msgin REFERENCE TO InputRoot.DFDL.*:R01;
		
		FOR orc AS msgin.*:O01_LOOP.*:ORC_LOOP[] DO

			DECLARE ordstm CHARACTER orc.*:"OrderDetail_LOOP".*:Order.*:OBR.*:"OBR.25.ResultStatus";

			SET ordstm =
				CASE ordstm
					WHEN 'F' THEN '1^Validated'
					WHEN 'C' THEN '2^Addendum'
					WHEN 'X' THEN '3^Deleted'
					ELSE ''
			END;

			SET BatchID = orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.3.FillerOrderNumber".*:"EI.1";
			IF CONTAINS(BatchID, 'QPREQ_') THEN 
				SET BatchID = SUBSTRING (BatchID AFTER '_');
			END IF; 
			
			CALL spRIS_ORU ( ack
			, CAST(msgin.*:MSH.*:"MSH.10.MessageControlID" AS INTEGER)
			--, SUBSTRING(msgin.MSH.Data_In_MSH.DateTimeOfMessage.DateTime_1916 BEFORE 'T')||' '||SUBSTRING(msgin.MSH.Data_In_MSH.DateTimeOfMessage.DateTime_1916 AFTER 'T')
			--, SUBSTRING(msgin.MSH.Data_In_MSH.DateTimeOfMessage.DateTime_1916 BEFORE 'T')||' '||SUBSTRING(msgin.MSH.Data_In_MSH.DateTimeOfMessage.DateTime_1916 AFTER 'T')
			, SUBSTRING(CAST(CAST(msgin.ns:MSH.*:"MSH.7.DateTimeOfMessage" AS TIMESTAMP FORMAT 'yyyyMMddHHmmss') AS CHARACTER) FROM 12 FOR 19)
			, SUBSTRING(CAST(CAST(msgin.ns:MSH.*:"MSH.7.DateTimeOfMessage" AS TIMESTAMP FORMAT 'yyyyMMddHHmmss') AS CHARACTER) FROM 12 FOR 19)
			, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.2.PlacerOrderNumber".*:"EI.1"
			--, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.3.FillerOrderNumber".*:"EI.1"
			, BatchID
			, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.18.PlacerField1"
			, msgin.ns:O01_LOOP.ns:PID_LOOP.*:PID.*:"PID.3.PatientIdentifierList".*:"CX.1"
			, msgin.ns:O01_LOOP.ns:PID_LOOP.*:PID.*:"PID.4.AlternatePatientIDPID".*:"CX.1"
			, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.4.UniversalServiceIdentifier".*:"CWE.1"
			, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.32.PrincipalResultInterpreter".*:"NDL.1".*:"CNN.1"
			, ordstm
			--, SUBSTRING(orc.OBR.ResultsRptStatusChngDateTime.DateTime_1916 BEFORE 'T')||' '||SUBSTRING(orc.OBR.ResultsRptStatusChngDateTime.DateTime_1916 AFTER 'T')
			--, SUBSTRING(orc.OBR.ResultsRptStatusChngDateTime.DateTime_1916 BEFORE 'T')||' '||SUBSTRING(orc.OBR.ResultsRptStatusChngDateTime.DateTime_1916 AFTER 'T')
			, SUBSTRING(CAST(CAST(orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.22.ResultsRptStatusChngDateTime" AS TIMESTAMP FORMAT 'yyyyMMddHHmmss') AS CHARACTER) FROM 12 FOR 19)
			, SUBSTRING(CAST(CAST(orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.22.ResultsRptStatusChngDateTime" AS TIMESTAMP FORMAT 'yyyyMMddHHmmss') AS CHARACTER) FROM 12 FOR 19)
			, 'N'
			, orc.*:OrderDetail_LOOP.*:Order.*:OBR.*:"OBR.34.Technician".*:"NDL.1".*:"CNN.1"
			, SUBSTRING(orc.*:OrderDetail_LOOP.*:OBX_LOOP.*:OBX.*:"OBX.3.ObservationIdentifier".*:"CWE.1" BEFORE '&')
			, CAST(orc.*:OrderDetail_LOOP.*:OBX_LOOP.*:OBX.*:"OBX.5.ObservationValue" AS BLOB CCSID 819)
			, '' 
			, orc.*:OrderDetail_LOOP.*:OBX_LOOP.*:OBX.*:"OBX.8.AbnormalFlags".*:"CWE.1"); --IN In_AGFARIS_ErrorMsg CHARACTER);
		END FOR;
		-- mantener correlId
		SET OutputRoot.MQMD = InputRoot.MQMD;
		CREATE FIELD OutputRoot.XMLNSC.ns51:ACK_RIS;
		SET OutputRoot.XMLNSC.ns51:ACK_RIS.ns51:MSH_ORU_ID = CAST(msgin.*:MSH.*:"MSH.10.MessageControlID" AS CHARACTER);
		SET OutputRoot.XMLNSC.ns51:ACK_RIS.ns51:SRV_Message = ack;
	END;

	CREATE PROCEDURE spRIS_ORU (INOUT SRV_Message CHARACTER
	, IN In_MSH_ORU_ID INTEGER
	, IN In_ORU_01_HIS_DATE CHARACTER
	, IN In_MSH_06_RIS_DATE CHARACTER
	, IN In_OBR_02_QP_REQ_ID CHARACTER
	, IN In_OBR_03_BATCH_ID CHARACTER
	, IN In_ORU_03_ACC_NUMBER CHARACTER
	, IN In_PID_05_ID CHARACTER
	, IN In_PID_05_ID2 CHARACTER
	, IN In_OBR_04_EXAM_CODE CHARACTER
	, IN In_OBR_32_RAD_ID CHARACTER
	, IN In_OBR_25_STATUS_REP CHARACTER
	, IN In_OBR_22_CREATE_DATE CHARACTER
	, IN In_OBR_27_VALIDATE_DATE CHARACTER
	, IN In_ORU_02_STATUS_HIS CHARACTER
	, IN In_OBR_34_USER_RIS CHARACTER
	, IN In_OBX_03_OBSERVATION_ID CHARACTER
	, IN In_OBX_05_OBSERVATION BLOB
	, IN In_AGFARIS_ErrorMsg CHARACTER
	, IN In_OBR_STATUS_CRIT CHARACTER
	) LANGUAGE DATABASE EXTERNAL NAME "ADMSALUD.SvcIbmPrcOru_Pkg.SvcIbmPrcOru";

END MODULE;

CREATE COMPUTE MODULE oru_orch_res
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		SET OutputRoot = InputRoot;
		DECLARE msh REFERENCE TO OutputRoot.DFDL.*:ACK.*:MSH;
		
		SET msh.ns:"MSH.9.MessageType".ns:"MSG.2" = 'R01';
		SET msh.ns:"MSH.9.MessageType".ns:"MSG.3" = '';
		SET msh.ns:"MSH.16.ApplicationAcknowledgmentType" = 'NE';
		
	END;

END MODULE;

CREATE COMPUTE MODULE oru_orch_req
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot = InputRoot;
		DECLARE msgin REFERENCE TO OutputRoot.DFDL.ns:R01;
		DECLARE ors CHARACTER;
		DECLARE orsflag CHARACTER '0';
		--DECLARE ref CHARACTER;

		FOR orc AS msgin.ns:O01_LOOP.ns:ORC_LOOP[] DO
			--SET ors = CAST(orc.*:OrderDetail_LOOP.*:OBX_LOOP.*:OBX.*:"OBX.11.ObservationResultStatus" AS BLOB CCSID 819);--.*:"OBX.11.ObservationResultStatus";
			SET ors = orc.*:OrderDetail_LOOP.*:OBX_LOOP.*:OBX.*:"OBX.11.ObservationResultStatus";--.*:"OBX.11.ObservationResultStatus";
			IF ors = 'P' THEN 
				SET orsflag = '1';
			END IF;
		END FOR;
		
		IF orsflag = '1' THEN
			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'RIS.ORMOUT.INPUT';
		ELSE
			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'RIS.ORU.INPUT';
		END IF;
		
	END;

END MODULE;

CREATE COMPUTE MODULE envolveHL7FSFB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- recuperar propiedades del mensaje de petici√≥n
		DECLARE envvar		REFERENCE TO Environment.Variables;
		
		-- construir mensaje FSFB de salida
		SET OutputRoot.MQMD		= envvar.MQMD;
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		CREATE FIELD OutputRoot.XMLNSC.ns1:FSFB;
		DECLARE fsfb		REFERENCE TO OutputRoot.XMLNSC.ns1:FSFB;
		CREATE FIELD fsfb.ns1:Header;
		DECLARE headout		REFERENCE TO fsfb.ns1:Header;
		CREATE FIELD fsfb.ns1:Body;
		DECLARE bodyout		REFERENCE TO fsfb.ns1:Body;
		
		
		-- referenciar propiedades para decodificar mensaje
		DECLARE msgtype		CHARACTER envvar.body.parse.msgtype;
		DECLARE msgset 		CHARACTER envvar.body.parse.msgset;
		DECLARE msgformat	CHARACTER envvar.body.parse.msgformat;
		DECLARE msgblob		BLOB;
	
		-- codificar el mensaje de respuesta obtenido del servicio
		CALL UTILS.encodemsg(msgtype, msgset, msgformat, InputRoot.MRM, msgblob);
		
		-- construir mensaje de salida
		SET headout				= envvar.header;
		
		CREATE FIELD bodyout.parse;
		SET bodyout.parse		= envvar.body.parse;
		CREATE FIELD bodyout.data;
		SET bodyout.data		= msgblob;
		
		IF NOT EXISTS(InputLocalEnvironment.Destination.MQ.DestinationData[1].queueName[]) THEN
			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'RIS.ORU.OUTPUT';
		END IF;
		
	END;
END MODULE;
