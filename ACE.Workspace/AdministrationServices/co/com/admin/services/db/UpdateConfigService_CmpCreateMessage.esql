BROKER SCHEMA co.com.admin.services.db


CREATE COMPUTE MODULE UpdateConfigService_CmpCreateMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		/******************************************************/
		-- Copiar cabeceras de mensaje
		/******************************************************/
		SET OutputRoot.MQMD 	= InputRoot.MQMD;
		SET OutputRoot.MQRFH2 	= InputRoot.MQRFH2;
		
		/******************************************************/
		-- Declarar referencias
		/******************************************************/
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2;
		DECLARE refInpRoot REFERENCE TO OutputRoot;
		
		CALL common.procedures.utils.saveMQM(refInpRoot, refEnv);
		
		/******************************************************/
		-- Declarar referencia a objeto de entrada
		/******************************************************/
		DECLARE refInp REFERENCE TO InputRoot;
		IF refMQRFH2.usr.response.formatType = 'XMLNSC' THEN
			MOVE refInp LASTCHILD;
			MOVE refInp LASTCHILD;
		ELSE
			MOVE refInp LASTCHILD;
			MOVE refInp LASTCHILD;
			MOVE refInp LASTCHILD;
		END IF;
		
		/******************************************************/
		-- Ejecuci贸n de tarea
		/******************************************************/
		DECLARE result ROW;
		DECLARE refResult REFERENCE TO result;
		CALL com.common.utils.dao.updateConfigService(refInp.Service,refResult);
		
		/******************************************************/
		-- Creaci贸n mensaje de respuesta
		/******************************************************/
		--Nombre de mensajes de respuesta
		DECLARE nmElementRs CHARACTER COALESCE(refMQRFH2.usr.response.WS.nmNode, 'ApplicationFault');
		
		/******************************************************/
		-- Declaraci贸n de namespaces propios de servicio
		/******************************************************/
		--Creaci贸n de mensaje de salida.
		DECLARE refOut REFERENCE TO OutputRoot;
		IF refMQRFH2.usr.response.formatType = 'XMLNSC' THEN
			DECLARE v1 NAMESPACE refMQRFH2.usr.response.WS.namespace.*:v1;
			CREATE FIELD OutputRoot.XMLNSC.v1:{nmElementRs};
			MOVE refOut TO OutputRoot.XMLNSC.v1:{nmElementRs};
		ELSE
			CREATE FIELD OutputRoot.JSON.Data.{nmElementRs};
			MOVE refOut TO OutputRoot.JSON.Data.{nmElementRs};			
		END IF;
		
		--Obtener mensaje de error desde base de datos
		DECLARE data ROW;
		DECLARE refObjError REFERENCE TO data.objError;
		CALL com.common.global.cache.getErrorHomologation(refResult.code, refObjError);
		
		SET refOut.ContextTransaction.IdTransaction 					= refMQRFH2.usr.contextTransaction.IdTransaction;
		SET refOut.ContextTransaction.CodeTransaction 					= refObjError.code;
		SET refOut.ContextTransaction.DescTransaction 					= refObjError.desc;
		SET refOut.ContextTransaction.ServerStatus.CodeTransaction 		= refResult.code;
		SET refOut.ContextTransaction.ServerStatus.DescTransaction 		= refResult.desc;
		
		RETURN TRUE;
	END;
END MODULE;
