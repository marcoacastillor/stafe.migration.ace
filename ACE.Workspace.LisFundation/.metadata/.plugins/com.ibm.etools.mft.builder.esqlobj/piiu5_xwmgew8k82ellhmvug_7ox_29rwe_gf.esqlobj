/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		DECLARE refInp REFERENCE TO InputRoot;
		MOVE refInp LASTCHILD;
		MOVE refInp LASTCHILD;
		MOVE refInp LASTCHILD;
		
		/*******************************************************/
		SET OutputRoot.BLOB.BLOB	= CAST(refInp.data AS BLOB);
		DECLARE refInputBlob REFERENCE TO OutputRoot.BLOB.BLOB;
		
		DECLARE LeadingMLLPBLOB BLOB CAST ( LeadingMLLPBytes AS BLOB );
		DECLARE TrailingMLLPBLOB BLOB CAST ( TrailingMLLPBytes AS BLOB );
		
		-- If AddLeadingMLLPBytes is enabled then add LeadingMLLPBytes		
		IF ( AddLeadingMLLPBytes ) THEN
			-- Convert LeadingMLLPBytes to its BLOB format
			DECLARE LeadingMLLPBLOB BLOB CAST ( LeadingMLLPBytes AS BLOB );
			-- Checking whether the message has Leading MLLP Bytes
			-- If yes then propagate the message to 'Out' terminal, unchanged
			DECLARE LeadingPosition INTEGER;
			SET	LeadingPosition = POSITION ( LeadingMLLPBLOB IN refInputBlob ); 
			
			-- Message does not contain LeadingMLLPBytes hence adding the same
			SET OutputRoot.BLOB.BLOB = LeadingMLLPBLOB || OutputRoot.BLOB.BLOB;
	        
	    END IF;
		
		-- If AddTrailingMLLPBytes is enabled then add TrailingMLLPBytes	
		IF ( AddTrailingMLLPBytes ) THEN
			-- Convert TrailingMLLPBytes to its BLOB format
			DECLARE TrailingMLLPBLOB BLOB CAST ( TrailingMLLPBytes AS BLOB );
			-- Checking whether the message has Trailing MLLP Bytes
			-- If yes then propagate the message to 'Out' terminal, unchanged
			DECLARE TrailingPosition INTEGER POSITION ( TrailingMLLPBLOB IN refInputBlob );
			DECLARE TrailingBytesLength INTEGER LENGTH ( TrailingMLLPBLOB );
			DECLARE MessageLength INTEGER LENGTH ( refInputBlob );
			DECLARE ActualPosition INTEGER ( MessageLength - TrailingBytesLength ) + 1;
						
			-- Message does not contain TrailingMLLPBytes hence adding the same
			SET OutputRoot.BLOB.BLOB =  OutputRoot.BLOB.BLOB || TrailingMLLPBLOB;
	        
		END IF;
		
		DECLARE refMQRFH2 REFERENCE TO InputRoot.MQRFH2;
		
		--Tomar identificador para responder a cliente
		SET InputLocalEnvironment.TCPIP.Input.ConnectionDetails.Id = refMQRFH2.usr.response.TCP.Id;
		SET InputLocalEnvironment.TCPIP.Input.ConnectionDetails.ReplyId = refMQRFH2.usr.response.TCP.ReplyId;	
		
		RETURN TRUE;
	END;

