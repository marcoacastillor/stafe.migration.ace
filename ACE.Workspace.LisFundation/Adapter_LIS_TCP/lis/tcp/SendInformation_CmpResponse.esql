BROKER SCHEMA lis.tcp


CREATE COMPUTE MODULE SendInformation_CmpResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE LeadingMLLPBytes CHARACTER '0b';
		DECLARE TrailingMLLPBytes CHARACTER '0d0d';
		
		/******************************************************/
		-- Declarar referencias
		/******************************************************/
		DECLARE refEnv REFERENCE TO Environment;
		
		/******************************************************/
		-- Copiar identificadores de mensaje
		/******************************************************/
		SET OutputRoot.MQMD.MsgId 		= CAST(refEnv.Variables.headers.MQMD.MsgId AS BLOB);
		SET OutputRoot.MQMD.CorrelId 	= CAST(refEnv.Variables.headers.MQMD.MsgId AS BLOB);
		SET OutputRoot.MQMD.ReplyToQ 	= TRIM(refEnv.Variables.headers.MQMD.ReplyToQ);
		SET OutputRoot.MQRFH2 			= refEnv.Variables.headers.MQRFH2;
		
		--Copiar mensaje de respuesta de backend.
		DECLARE msgTemp CHARACTER CAST(InputRoot.BLOB.BLOB AS BLOB CCSID 819);
		DECLARE posInit INTEGER POSITION(LeadingMLLPBytes in msgTemp);
		DECLARE posEnd INTEGER POSITION(TrailingMLLPBytes in msgTemp);
		
		SET OutputRoot.BLOB.BLOB = CAST(SUBSTRING(msgTemp FROM (posInit+2) FOR (LENGTH(msgTemp)-posInit-2)) AS BLOB);
		--SET OutputRoot.BLOB.BLOB = CAST(SUBSTRING(msgTemp FROM (posInit+2) FOR (posEnd-posInit-2)) AS BLOB);
		--SET OutputRoot.BLOB.BLOB = CAST(SUBSTRING(msgTemp FROM (posInit+2) FOR LENGTH(msgTemp)-2) AS BLOB);
		RETURN TRUE;
	END;
END MODULE;
